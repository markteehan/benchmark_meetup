version: '2'
# Monitoring:
# option A: uncomment "control-center" and uncomment #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
# option B: uncomment KAFKA_TELEMETRY* and uncomment KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
#           login to Confluent Cloud, create an API key and Password, substitute in to API_KEY and API_PASSWORD

services:
  squid:
      image: alatas/squid-alpine-ssl:latest
      hostname: squid
      container_name: squid
      privileged: true
      ports:
        - 3128:3128
        - 3129:3129
      volumes:
        # the following lines initializes squid without any AUTH settings
        - ./squid-no-auth.conf:/etc/squid/squid.conf
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-server:latest
    ports:
      - 9091:9091
    container_name: kafka1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: 'asia-east1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9091
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:29092,OUTSIDE://kafka1:9091
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 5000
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9091
      KAFKA_JMX_PORT: 3001
      KAFKA_JMX_HOSTNAME: "kafka1"
      # Uncomment the next line to send JMX metrics to the Confluent Control Center container
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #
      # Uncomment the next 7 lines to send JMX metrics to the Confluent Health+ Monitoring service
      #KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: "true"
      #KAFKA_CONFLUENT_TELEMETRY_API_KEY: PASTE_CCLOUD_API_KEY_HERE
      #KAFKA_CONFLUENT_TELEMETRY_API_SECRET: PASTE_CCLOUD_API_SECRET_HERE
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_URL: http://squid:3128
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_USERNAME: "null"
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_PASSWORD: "null"



  kafka2:
    image: confluentinc/cp-server:latest
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_BROKER_RACK: 'asia-east1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:29092,OUTSIDE://kafka2:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 5000
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9091
      KAFKA_JMX_PORT: 3001
      KAFKA_JMX_HOSTNAME: "kafka2"
      # Uncomment the next line to send JMX metrics to the Confluent Control Center container
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #
      # KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: "true"
      #KAFKA_CONFLUENT_TELEMETRY_API_KEY: PASTE_CCLOUD_API_KEY_HERE
      #KAFKA_CONFLUENT_TELEMETRY_API_SECRET: PASTE_CCLOUD_API_SECRET_HERE
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_URL: http://squid:3128
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_USERNAME: "null"
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_PASSWORD: "null"

  kafka3:
    image: confluentinc/cp-server:latest
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_BROKER_RACK: 'asia-east1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:29092,OUTSIDE://kafka3:9093
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 5000
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9091
      # Uncomment the next line to send JMX metrics to the Confluent Control Center container
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #
      # KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: "true"
      #KAFKA_CONFLUENT_TELEMETRY_API_KEY: PASTE_CCLOUD_API_KEY_HERE
      #KAFKA_CONFLUENT_TELEMETRY_API_SECRET: PASTE_CCLOUD_API_SECRET_HERE
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_URL: http://squid:3128
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_USERNAME: "null"
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_PASSWORD: "null"

  kafka4:
    image: confluentinc/cp-server:latest
    container_name: kafka4
    depends_on:
      - zookeeper
    ports:
      - 9094:9094
    environment:
      KAFKA_BROKER_ID: 4
      KAFKA_BROKER_RACK: 'asia-southeast1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka4:29092,OUTSIDE://kafka4:9094
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 5000
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9091
      # Uncomment the next line to send JMX metrics to the Confluent Control Center container
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #
      # KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: "true"
      #KAFKA_CONFLUENT_TELEMETRY_API_KEY: PASTE_CCLOUD_API_KEY_HERE
      #KAFKA_CONFLUENT_TELEMETRY_API_SECRET: PASTE_CCLOUD_API_SECRET_HERE
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_URL: http://squid:3128
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_USERNAME: "null"
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_PASSWORD: "null"

  kafka5:
    image: confluentinc/cp-server:latest
    container_name: kafka5
    depends_on:
      - zookeeper
    ports:
      - 9095:9095
    environment:
      KAFKA_BROKER_ID: 5
      KAFKA_BROKER_RACK: 'asia-southeast1'
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:29092,OUTSIDE://:9095
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka5:29092,OUTSIDE://kafka5:9095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'false'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD
      KAFKA_CONFLUENT_BALANCER_HEAL_BROKER_FAILURE_THRESHOLD_MS: 5000
      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka1:9091
      # Uncomment the next line to send JMX metrics to the Confluent Control Center container
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #
      # KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_CONFLUENT_TELEMETRY_ENABLED: "true"
      #KAFKA_CONFLUENT_TELEMETRY_API_KEY: PASTE_CCLOUD_API_KEY_HERE
      #KAFKA_CONFLUENT_TELEMETRY_API_SECRET: PASTE_CCLOUD_API_SECRET_HERE
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_URL: http://squid:3128
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_USERNAME: "null"
      #KAFKA_CONFLUENT_TELEMETRY_PROXY_PASSWORD: "null"

#!#   control-center:
#!#     image: confluentinc/cp-enterprise-control-center:latest
#!#     hostname: control-center
#!#     container_name: control-center
#!#     depends_on:
#!#       - kafka5
#!#     ports:
#!#       - "9021:9021"
#!#     environment:
#!#       CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:9091
#!#       CONTROL_CENTER_STREAMS_CPREST_URL: http://kafka1:8090,http://kafka2:8090,http//kafka3:8090,http//kafka4:8090,http//kafka5:8090
#!#       CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
#!#       CONTROL_CENTER_REPLICATION_FACTOR: 3
#!#       CONTROL_CENTER_CONNECT_CDC_CLUSTER: "http://connect:8083"
#!#       CONTROL_CENTER_KSQL_TEAM1_URL: "http://ksqldb1:8088"
#!#       CONTROL_CENTER_KSQL_TEAM2_URL: "http://ksqldb2:8088"
#!#       #CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
#!#       #CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
#!#       #CONFLUENT_METRICS_TOPIC_REPLICATION: 2
#!#       PORT: 9021
#!#       #CONTROL_CENTER_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#!#       CONTROL_CENTER_MODE_ENABLE: "management"
#!# 
